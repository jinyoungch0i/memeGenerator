{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","App.js","index.js"],"names":["Header","src","alt","MemeGenerator","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","randomInt","Math","floor","random","state","allMemeImgs","length","randomMemeUrl","url","randomImg","topText","bottomText","fetch","then","response","json","data","memes","className","onSubmit","this","type","placeholder","onChange","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"yKAiBeA,EAdA,WACX,OACI,mCACI,mCACI,qBACIC,IAAI,iEACJC,IAAI,eAER,qD,mCCuFDC,E,kDA5FX,aAAe,IAAD,8BACV,gBA2BJC,aAAe,SAAAC,GACX,MAAsBA,EAAMC,OAAtBC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAEZ,EAAKC,SAAL,eAESF,EAAOC,KAjCN,EAuCdE,aAAe,SAAAL,GAEXA,EAAMM,iBAGN,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAW,EAAKC,MAAMC,YAAYC,QAE9DC,EAAgB,EAAKH,MAAMC,YAAYL,GAAWQ,IAIxD,EAAKX,SACD,CACAY,UAAYF,KAlDhB,EAAKH,MAAQ,CACTM,QAAU,GACVC,WAAa,GACbF,UAAY,gCACZJ,YAAc,IANR,E,qDAiBd,WAAqB,IAAD,OAChBO,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKjB,SACnB,CACAQ,YAAcS,EAASE,KAAKC,a,oBAmCpC,WACI,OACI,qCAEI,uBAAMC,UAAU,YAAYC,SAAUC,KAAKtB,aAA3C,UAEI,uBACIuB,KAAK,OACL1B,KAAK,UACL2B,YAAY,WACZ1B,MAAOwB,KAAKhB,MAAMM,QAClBa,SAAUH,KAAK5B,eAGpB,uBACK6B,KAAK,OACL1B,KAAK,aACL2B,YAAY,cACZ1B,MAAOwB,KAAKhB,MAAMO,WAClBY,SAAUH,KAAK5B,eAGnB,iDAGJ,sBAAK0B,UAAU,OAAf,UACI,qBAAK7B,IAAK+B,KAAKhB,MAAMK,UAAWnB,IAAI,4BACpC,oBAAI4B,UAAU,MAAd,SAAqBE,KAAKhB,MAAMM,UAChC,oBAAIQ,UAAU,SAAd,SAAwBE,KAAKhB,MAAMO,uB,GAtF3Ba,IAAMC,WCSnBC,EATH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJNC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b5c01448.chunk.js","sourcesContent":["import React from \"react\"\n\n//functional component since no need to handle state\nconst Header = () => {\n    return (\n        <>\n            <header>\n                <img\n                    src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\n                    alt=\"troll face\"\n                />\n                <p>MEME GENERATOR</p>\n            </header>\n        </>\n    )\n}\n\nexport default Header\n","import React from \"react\"\n\n//class-based component since it will need to pull API data\n//and also storing that data in state:\n\nclass MemeGenerator extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            topText : \"\",\n            bottomText : \"\",\n            randomImg : \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs : []\n        }\n        // this.handleChange = this.handleChange.bind(this)\n\n        // binding is necessary for \"this\" to work in the callback\n        // update: using arrow syntax to declare class method\n        // gives it an implicit \"this\" context, meaning binding is no longer necessary :)\n\n        // this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(response => this.setState(\n            {\n            allMemeImgs : response.data.memes\n            }\n        ))\n    }\n\n    //handleChange is going to be equipped with default event parameter:\n    handleChange = event => {\n        let { name, value } = event.target\n\n        this.setState(\n            {\n                [name]: value\n            }\n        )\n    }\n\n    //class method that is invoked onSubmit of form element\n    handleSubmit = event => {\n        //since form is submitted, event.preventDefault is called so that the page is not refreshed:\n        event.preventDefault()\n\n        //picking a random integer between 0 and last index of allMemeImgs array\n        const randomInt = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        //grabbing the url of a meme at a random index of the allMemeImgs array\n        const randomMemeUrl = this.state.allMemeImgs[randomInt].url\n\n        //setting the randomImg property to the randomly picked meme's url,\n        //which will be plugged into the <img /> as a src=\"{randomImg}\":\n        this.setState(\n            {\n            randomImg : randomMemeUrl\n            }\n        )\n    }\n\n    render() {\n        return (\n            <>\n                {/* onSubmit on form element was used vs. onClick on button (better in terms of semantic HTML) */}\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n\n                    <input\n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"Top Text\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    />\n\n                   <input\n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange}\n                    />\n\n                    <button>Generate</button>\n                </form>\n\n                <div className=\"meme\">\n                    <img src={this.state.randomImg} alt=\"randomly generated meme\"/>\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default MemeGenerator\n","import React from \"react\"\n\nimport Header from \"./components/Header\"\nimport MemeGenerator from \"./components/MemeGenerator\"\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <MemeGenerator />\n    </>\n  )\n}\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./App\"\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n    )\n"],"sourceRoot":""}